service: finapp-backend-aws-node-poc-v1
frameworkVersion: '2 || 3'

# Plugins for Serverless project
plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  stage: dev # Default stage to be used. Default is "dev"
  region: ap-south-1
  stackName: finapp-backend-aws-node-poc-v1-stack # Use a custom name for the CloudFormation stack
  apiName: finapp-backend-aws-node-poc-v1-api # Use a custom name for the API Gateway API

# package:
#   patterns:
#     - '!src/**'
#     - src/endpoints/**

functions:
  hello:
    handler: handler.hello
    events: # The Events that trigger this Function
      - httpApi: # HTTP API endpoint (API Gateway v2)
          path: /
          method: get
  dummy:
    handler: src/endpoints/dummy.handler
    name: "${self:service}-${self:provider.stage}" # optional, Deployed Lambda name
    description: "Dummy Endpoint"
    runtime: nodejs12.x
    # package:
    #   include:
    #     - dummy.js
    events: # The Events that trigger this Function
      - http: # REST API endpoint (API Gateway v1)
          path: dummy # Path for this endpoint
          method: get
  get-accounts:
    handler: src/api/accounts.handler
    name: "get-accounts"
    description: "Get Accounts"
    events:
      - http:
          path: accounts
          method: get
          authorizer:
            name: poolToApiGatewayAuthorizer
            resultTtlInSeconds: 300
            type: COGNITO_USER_POOLS
  get-account:
    handler: src/api/account.handler
    name: "get-account"
    description: "Get Account"
    events:
      - http:
          path: account
          method: get
  get-daybook:
    handler: src/api/daybook.handler
    name: "get-accounts"
    description: "Get Daybook"
    events:
      - http:
          path: daybook
          method: get